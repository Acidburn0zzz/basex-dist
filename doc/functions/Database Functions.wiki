This module contains methods to list and open databases, explicitly apply available index structures, or get information on the database structure. All functions are introduced with the <code>db:</code> prefix.

==db:system==
{|
|-
| valign='top' width='90' | '''Signatures'''
|<code>
  <b>db:system</b>() as xs:string</code>
<br />
|-
| valign='top' | '''Summary'''
|Lists information on the database system.
|-
| valign='top' | '''Rules'''
|This function returns a simple string with general information on the database system, such as the database path and current database settings.<br />
|}

==db:list==
{|
|-
| valign='top' width='90' | '''Signatures'''
|<code>
  <b>db:list</b>() as xs:string*</code>
<br />
|-
| valign='top' | '''Summary'''
|Lists all databases.
|-
| valign='top' | '''Rules'''
|This function returns a <code>xs:string</code> sequence with the names of all databases.<br />
|}

==db:open==
{|
|-
| valign='top' width='90' | '''Signatures'''
|<code>
  <b>db:open</b>($name as xs:string) as document-node()</code>
<br />
|-
| valign='top' | '''Summary'''
|Retrieves documents from a database.
|-
| valign='top' | '''Rules'''
|This function opens the documents of the database specified by <code>$name</code>. The name of the database may be extended by a collection path.<br />
|-
| valign='top' | '''Examples'''
|The expression <code>db:open("docs")</code> returns all documents from the database named <code>docs</code>.<br />The expression <code>db:open("docs/one")</code> returns all documents from the database named <code>docs</code> in the subpath <code>one</code>.<br />
|-
| valign='top' | '''Errors'''
|<b>[BASX0003]</b> is raised if the database is not found.<br />
|}

==db:open-pre==
{|
|-
| valign='top' width='90' | '''Signatures'''
|<code>
  <b>db:open-pre</b>($name as xs:string, $pre as xs:integer) as node()</code>
<br />
|-
| valign='top' | '''Summary'''
|Returns a specific database node.
|-
| valign='top' | '''Rules'''
|This function opens the database specified by <code>$name</code> and returns the node with the <i>pre</i> value specified by <code>$pre</code>.<br />
|-
| valign='top' | '''Examples'''
|The expression <code>db:open-pre("docs", 0)</code> returns the first database node from the database named <code>docs</code>.<br />
|-
| valign='top' | '''Errors'''
|<b>[BASX0004]</b> is raised if the specified <code>$pre</code> value does not exist in the database.<br />
|}

==db:open-id==
{|
|-
| valign='top' width='90' | '''Signatures'''
|<code>
  <b>db:open-id</b>($name as xs:string, $id as xs:integer) as node()</code>
<br />
|-
| valign='top' | '''Summary'''
|Returns a specific database node.
|-
| valign='top' | '''Rules'''
|This function opens the database specified by <code>$name</code> and returns the node with the <i>id</i> value specified by <code>$id</code>.<br />In contrast to the <i>pre</i> value, the <i>id</i> will remain valid after update operations.<br />
|-
| valign='top' | '''Errors'''
|<b>[BASX0004]</b> is raised if the specified <code>$id</code> does not exist in the database.<br />
|}

==db:node-pre==
{|
|-
| valign='top' width='90' | '''Signatures'''
|<code>
  <b>db:node-pre</b>($nodes as node()*) as xs:integer*</code>
<br />
|-
| valign='top' | '''Summary'''
|Returns the <code>pre</code> values of database nodes.
|-
| valign='top' | '''Rules'''
|This function returns the <code>pre</code> values of all database nodes specified by <code>$nodes</code>. <code>pre</code> values are direct, internal pointers to database nodes, which might be changed by updates.<br />
|-
| valign='top' | '''Examples'''
|The expression <code>db:node-pre(doc("input"))</code> returns <code>0</code> if the database <code>input</code> contains a single document.<br />
|}

==db:node-pre==
{|
|-
| valign='top' width='90' | '''Signatures'''
|<code>
  <b>db:node-pre</b>($nodes as node()*) as xs:integer*</code>
<br />
|-
| valign='top' | '''Summary'''
|Returns the <code>id</code> values of database nodes.
|-
| valign='top' | '''Rules'''
|This function returns the <code>id</code> values of all database nodes specified by <code>$nodes</code>. <code>id</code> values are pointers to database nodes, which are not changed by updates.<br />
|}

==db:text==
{|
|-
| valign='top' width='90' | '''Signatures'''
|<code>
  <b>db:text</b>($string as item()) as text()*</code>
<br />
|-
| valign='top' | '''Summary'''
|Returns results from a text index request.
|-
| valign='top' | '''Rules'''
|This function accesses the text index and returns all text nodes that have <code>$string</code> as string value.<br />
|-
| valign='top' | '''Examples'''
|The expression <code>db:text("QUERY")</code> returns all text nodes of the currently opened database that match the string <code>QUERY</code>.<br />The expression <code>db:open("DB")/db:text("QUERY")/..</code> returns the parents of all text nodes of the database <code>DB</code> that match the string <code>QUERY</code>.<br />
|-
| valign='top' | '''Errors'''
|<b>[BASX0001]</b> is raised if the index is not available.<br />
<b>[BASX0002]</b> is raised if the context item does not represent a database node.<br />
|}

==db:attribute==
{|
|-
| valign='top' width='90' | '''Signatures'''
|<code>
  <b>db:attribute</b>($string as item()) as attribute()*</code>
<br />
<code>
  <b>db:attribute</b>($string as item(), $name as xs:string) as attribute()*</code>
<br />
|-
| valign='top' | '''Summary'''
|Returns results from a attribute index request.
|-
| valign='top' | '''Rules'''
|This function accesses the attribute index and returns all attribute nodes that have <code>$string</code> as string value.<br />If <code>$name</code> is specified, the resulting attribute nodes are filtered by their attribute name.<br />
|-
| valign='top' | '''Examples'''
|The expression <code>db:open("DB")/db:attribute("QUERY", "id")/..</code> returns the parents of all attribute nodes of the database <code>DB</code> that have <code>QUERY</code> as string value.<br />
|-
| valign='top' | '''Errors'''
|<b>[BASX0001]</b> is raised if the index is not available.<br />
<b>[BASX0002]</b> is raised if the context item does not represent a database node.<br />
|}

==db:fulltext==
{|
|-
| valign='top' width='90' | '''Signatures'''
|<code>
  <b>db:fulltext</b>($text as xs:string) as text()</code>
<br />
|-
| valign='top' | '''Summary'''
|Returns results from a full-text index request.
|-
| valign='top' | '''Rules'''
|This function accesses the full-text index and returns all text nodes that contain the string <code>$text</code>. The index full-text options are used for searching, i.e., if the index terms were stemmed, the search string will be stemmed as well.<br />
|-
| valign='top' | '''Examples'''
|The expression <code>db:fulltext("QUERY")</code> returns all text nodes of the currently opened database that contain the string <code>QUERY</code>.<br />
|-
| valign='top' | '''Errors'''
|<b>[BASX0001]</b> is raised if the index is not available.<br />
<b>[BASX0002]</b> is raised if the context item does not represent a database node.<br />
|}

==db:info==
{|
|-
| valign='top' width='90' | '''Signatures'''
|<code>
  <b>db:info</b>() as xs:string</code>
<br />
<code>
  <b>db:info</b>($type as xs:string) as xs:string</code>
<br />
|-
| valign='top' | '''Summary'''
|Returns database information.
|-
| valign='top' | '''Rules'''
|This function returns information on the database that is referenced by the current context item.<br />If <code>$type</code> is specified, the funnction returns information on a database index. It must be one of the values <code>TEXT</code>, <code>ATTRIBUTE</code>, <code>FULLTEXT</code>, <code>PATH</code>, <code>TAG</code>, or <code>ATTNAME</code>.<br />
|-
| valign='top' | '''Errors'''
|<b>[BASX0001]</b> is raised if the specified index is not available.<br />
<b>[BASX0002]</b> is raised if the context item does not represent a database node.<br />
|}

[[Category:XQuery]]